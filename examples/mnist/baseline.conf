name: "mlp"
train_steps: 400000
test_steps:100
test_freq:2000
disp_freq:500
train_one_batch {
  alg: kBP
}
updater{
  type: kSGD
  learning_rate{
    type : kStep
    base_lr: 0.001
    step_conf{
      change_freq: 100
      gamma: 0.997
    }
  }
}

neuralnet {
  layer {
    name: "data"
    type: kRecordInput
    store_conf {
      backend: "kvfile"
      path: "examples/mnist/train_data.bin"
      random_skip: 5000
      batchsize: 64
      shape: 784
    }
    include: kTrain
  }

  layer {
    name: "data"
    type: kRecordInput
    store_conf {
      backend: "kvfile"
      path: "examples/mnist/test_data.bin"
      batchsize: 100
      shape: 784
    }
    include: kTest
  }
  layer {
    name: "drop0"
    type: kDropout
    srclayers: "data"
  }
  layer{
    name: "fc1"
    type: kInnerProduct
    srclayers:"drop0"
    innerproduct_conf{
      num_output: 1000
    }
    param{
      name: "w1"
      init {
        type: kUniform
        low:-0.05
        high:0.05
      }
    }
    param{
      name: "b1"
      init {
        type : kUniform
        low: -0.05
        high:0.05
      }
    }
  }

  layer{
    name: "relu1"
    type: kReLU
    srclayers:"fc1"
  }
  layer {
    name: "drop1"
    type: kDropout
    srclayers: "relu1"
  }
  layer{
    name: "fc2"
    type: kInnerProduct
    srclayers:"drop1"
    innerproduct_conf{
      num_output: 1000
    }
    param{
      name: "w2"
      init {
        type: kUniform
        low:-0.05
        high:0.05
      }
    }
    param{
      name: "b2"
      init {
        type: kUniform
        low: -0.05
        high:0.05
      }
    }
  }
  layer{
    name: "relu2"
    type: kReLU
    srclayers:"fc2"
  }
  layer {
    name: "drop2"
    type: kDropout
    srclayers: "relu2"
  }
  layer{
    name: "fc3"
    type:  kInnerProduct
    srclayers:"drop2"
    innerproduct_conf{
      num_output: 1000
    }
    param{
      name: "w3"
      init{
        type: kUniform
        low:-0.05
        high:0.05
      }
    }
    param{
      name: "b3"
      init {
        type : kUniform
        low: -0.05
        high:0.05
      }
    }
  }
  layer{
    name: "relu3"
    type: kReLU
    srclayers:"fc3"
  }
  layer {
    name: "drop3"
    type: kDropout
    srclayers: "relu3"
  }
  layer{
    name: "fc4"
    type:  kInnerProduct
    srclayers:"drop3"
    innerproduct_conf{
      num_output: 10
    }
    param{
      name: "w4"
      init{
        type: kUniform
        low:-0.05
        high:0.05
      }
    }
    param{
      name: "b4"
      init {
        type : kUniform
        low: -0.05
        high:0.05
      }
    }
  }
  layer{
    name: "loss"
    type:kSoftmaxLoss
    softmaxloss_conf{
      topk:1
    }
    srclayers:"fc4"
    srclayers:"data"
  }
}
cluster {
  nworker_groups: 1
  nserver_groups: 1
  workspace: "examples/mnist"
}
